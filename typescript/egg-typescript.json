{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": null
    },
    "exported_at": "2024-12-30T10:42:52+00:00",
    "name": "Typescript",
    "author": "stephan@kotelnikow.de",
    "uuid": "e4fcddb8-8c76-4e6b-a701-b97174d08ccf",
    "description": "An Egg for running TypeScript projects. It compiles TypeScript to JavaScript and runs the generated code using Node.js.",
    "features": [],
    "docker_images": {
        "Nodejs 21": "ghcr.io/parkervcp/yolks:nodejs_21",
        "Nodejs 20": "ghcr.io/parkervcp/yolks:nodejs_20",
        "Nodejs 19": "ghcr.io/parkervcp/yolks:nodejs_19",
        "Nodejs 18": "ghcr.io/parkervcp/yolks:nodejs_18",
        "Nodejs 17": "ghcr.io/parkervcp/yolks:nodejs_17",
        "Nodejs 16": "ghcr.io/parkervcp/yolks:nodejs_16",
        "Nodejs 14": "ghcr.io/parkervcp/yolks:nodejs_14"
    },
    "file_denylist": [],
    "startup": "if [ ! -z \"$ADDITIONAL_PACKAGES\" ]; then npm install $ADDITIONAL_PACKAGES; fi; if [ ! -z \"$UNINSTALL_PACKAGES\" ]; then npm uninstall $UNINSTALL_PACKAGES; fi; tsc; if [ ! -z \"$MAIN_FILE\" ]; then node $MAIN_FILE; fi",
    "config": {
        "files": "{}",
        "startup": "{\n  \"done\": \"Server running\"\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\r\n# TypeScript Project Installation Script\r\n#\r\n# Server Files: /mnt/server\r\n\r\n# Install system dependencies\r\napt update\r\napt install -y curl jq file unzip make gcc g++ python3 python3-dev python3-pip libtool\r\n\r\necho -e \"Updating npm, please wait...\"\r\nnpm install npm@latest --location=global\r\n\r\n# Set the working directory\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\n\r\n# Check if the user has already uploaded files\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\r\n    echo -e \"Assuming user knows what they are doing. Have a good day.\"\r\n    exit 0\r\nfi\r\n\r\n# Create TypeScript project structure\r\necho -e \"Setting up TypeScript project...\"\r\n\r\n# Create a tsconfig.json\r\ncat <<EOT > tsconfig.json\r\n{\r\n  \"compilerOptions\": {\r\n    \"target\": \"es6\",\r\n    \"module\": \"commonjs\",\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./src\",\r\n    \"strict\": true,\r\n    \"esModuleInterop\": true,\r\n    \"skipLibCheck\": true\r\n  },\r\n  \"include\": [\"src/**/*\"],\r\n  \"exclude\": [\"node_modules\", \"dist\"]\r\n}\r\nEOT\r\n\r\n# Create src folder if it does not exist\r\nif [ ! -d \"src\" ]; then\r\n    echo -e \"Creating src folder...\"\r\n    mkdir src\r\n    echo -e \"console.log('Hello, World!');\" > src/index.ts\r\nfi\r\n\r\n# Install TypeScript and required type definitions\r\necho -e \"Installing TypeScript and @types/node...\"\r\nnpm install typescript @types/node --save-dev\r\n\r\n# Install additional packages if specified\r\nif [ ! -z \"$ADDITIONAL_PACKAGES\" ]; then\r\n    echo -e \"Installing additional packages: $ADDITIONAL_PACKAGES\"\r\n    npm install $ADDITIONAL_PACKAGES\r\nfi\r\n\r\n# Uninstall specified packages if provided\r\nif [ ! -z \"$UNINSTALL_PACKAGES\" ]; then\r\n    echo -e \"Uninstalling packages: $UNINSTALL_PACKAGES\"\r\n    npm uninstall $UNINSTALL_PACKAGES\r\nfi\r\n\r\n# Install dependencies from package.json if present\r\nif [ -f package.json ]; then\r\n    echo -e \"Installing dependencies from package.json...\"\r\n    npm install\r\nelse\r\n    # Create a package.json if none exists\r\n    echo -e \"No package.json found. Creating package.json...\"\r\n    npm init -y\r\n    npm install typescript @types/node\r\nfi\r\n\r\n# Compile TypeScript files\r\necho -e \"Compiling TypeScript files...\"\r\ntsc\r\n\r\necho -e \"TypeScript project setup completed!\"\r\nexit 0",
            "container": "ghcr.io/pelican-eggs/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "sort": 1,
            "name": "Additional Packages",
            "description": "",
            "env_variable": "ADDITIONAL_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        },
        {
            "sort": 2,
            "name": "Main File",
            "description": "",
            "env_variable": "MAIN_FILE",
            "default_value": "src/index.ts",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:200"
            ]
        },
        {
            "sort": 3,
            "name": "Uninstall Packages",
            "description": "",
            "env_variable": "UNINSTALL_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        }
    ]
}
